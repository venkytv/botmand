#!@VENV_DIR@/bin/python3 -u

import os
import re
import subprocess
import sys

from langchain.agents import initialize_agent, tool, AgentType
from langchain.chat_models import ChatOpenAI
from langchain.memory import ConversationBufferMemory

model = os.environ.get("MODEL", "gpt-3.5-turbo")
agent_type = AgentType.CHAT_CONVERSATIONAL_REACT_DESCRIPTION
num_log_lines = str(os.environ.get("NUM_LOG_LINES", 10))
verbose = os.environ.get("VERBOSE", "false").lower() == "true"

log_files = {}
log_re = re.compile(r"LOG_(.*)")
for env in os.environ:
    m = log_re.match(env)
    if m:
        log_files[m.group(1)] = os.environ[env]

tools = []

@tool("List System Services")
def list_services(query: str) -> str:
    """Return a list of services running on the system
    along with a log file for each which you can read to see if the service is healthy.
    """

    if query in log_files:
        return f"{query}: {log_files[query]}"
    return "\n".join([ f"{s}: {log_files[s]}" for s in log_files ])

@tool
def get_file_contents(file: str) -> str:
    """Read contents of file given the full path to it
    The input needs to be a single file path from the list of log file
    paths for one of the known services from the "List System Services" tool.
    """

    # Read the last few lines of the log file
    try:
        p = subprocess.run(["tail", "-n", num_log_lines, file],
                           capture_output=True, text=True, check=True)
        return p.stdout
    except:
        return f"ERROR reading file {file}"

if __name__ == "__main__":
    tools.append(list_services)
    tools.append(get_file_contents)

    memory = ConversationBufferMemory(memory_key="chat_history", return_messages=True)

    llm=ChatOpenAI(model_name=model, temperature=0)
    agent_chain = initialize_agent(tools, llm, agent=agent_type, verbose=verbose, memory=memory)

    print("Checking...")
    for line in sys.stdin:
        try:
            print("...")
            print(agent_chain.run(input=line.strip()))
        except Exception as e:
            print(f"Sorry, I encountered an error ({e}).\nCould you try again?")
